program sdml_program "version 1.0.2":
import "sdml_semantics.gSemantics";
import "sdml_verification.gSemantics";
import "sdml_grammar.gGrammar";
import "template_invocation.gSemantics";
import "template_routines.gSemantics";
import "config_generation.gSemantics";

#--- Prologue routine
before {
}

#--- 'when' clauses
when . "sdml"
message "a source text file with the .sdml extension"
??@lstring inSourceFile {
  @os os;
  grammar sdml_grammar in inSourceFile ?os;

  os := [os verify];
  
  if not [option sdml_options.dryrun value] then
    @TfieldMap configuration := [os configuration];
    
  #  log configuration; 
    
    addStringValue !?configuration !lstringwith[!"BACKEND"] ![option sdml_options.backend value];
  
    @string result := computeTemplate[!"" !configuration !"root"];
  end if;
}

#--- Epilogue routine
after {
}

#---

end program ;
